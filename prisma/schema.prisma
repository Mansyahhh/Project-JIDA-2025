generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

enum StatusSiswa {
  SiswaBaru
  MutasiMasuk
}

enum JenisKelamin {
  Laki_laki
  Perempuan
}

enum TipePegawai {
  Pendidik
  Kependidikan
}

enum JenisPembayaran {
  Bangunan
  Ujian
  DaftarUlang
  SPP
  Seragam
  Buku
  Lainnya
}

enum metodePembayaran {
  Tunai
  QrCode
  Transfer
  EWallet
}

enum KelasEnum {
  KELAS_1A
  KELAS_1B
  KELAS_1C
  KELAS_2A
  KELAS_2B
  KELAS_2C
  KELAS_3A
  KELAS_3B
  KELAS_3C
  KELAS_4A
  KELAS_4B
  KELAS_4C
  KELAS_5A
  KELAS_5B
  KELAS_5C
  KELAS_6A
  KELAS_6B
  KELAS_6C
}

enum EnumBerlakuUntuk {
  SEMUA
  KELAS
  SISWA
}

enum EnumMetodePembayaran {
  TUNAI
  TRANSFER
  LAINNYA
}

model Siswa {
  id              String       @id @default(uuid())
  nama            String
  kelas           KelasEnum
  nisn            String       @unique
  password        String
  alamat          String?
  createdAt       DateTime     @default(now())
  email           String?
  phone           String?
  updatedAt       DateTime     @updatedAt
  namaAyah        String?
  namaIbu         String?
  namaWali        String?
  nik             String?
  penghasilanWali Int?
  tanggalLahir    DateTime?
  tempatLahir     String?
  jenisKelamin    String?
  status          StatusSiswa
  pembayaran      Pembayaran[]
  tagihan         Tagihan[]    @relation("SiswaTagihan") // <-- tambahkan ini
}

model Guru {
  id                 String       @id @default(uuid())
  nama               String
  jenisKelamin       JenisKelamin
  alamat             String?
  email              String       @unique
  phone              String?
  tipePegawai        TipePegawai
  mapel              String?
  pendidikanTerakhir String
  createdAt          DateTime     @default(now())
}

model Tagihan {
  id           String           @id @default(uuid())
  nama         String
  deskripsi    String?
  jumlah       Int
  berlakuUntuk EnumBerlakuUntuk
  kelas        KelasEnum?
  siswaId      String?
  siswa        Siswa?           @relation("SiswaTagihan", fields: [siswaId], references: [id])
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  pembayaran   Pembayaran[]
}

model Pembayaran {
  id          String               @id @default(uuid())
  siswaId     String
  tagihanId   String
  jumlahBayar Int
  tanggal     DateTime             @default(now())
  metode      EnumMetodePembayaran
  keterangan  String?
  siswa       Siswa                @relation(fields: [siswaId], references: [id])
  tagihan     Tagihan              @relation(fields: [tagihanId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("admin") // "admin" | "superadmin"
  createdAt DateTime @default(now())

  sessions Session[]
  accounts Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
